library(tidyverse)
# decide if you want to do outlier removal for ROMs for feet
outlier_removal = TRUE
setwd('D:\Jojo\PhD\ClimbingRobot\ClimbingLizardDLCAnalysis\Gecko01-Tasmin-Gecko-2020-04-16\analysis-results')
setwd("D:/Jojo/PhD/ClimbingRobot/ClimbingLizardDLCAnalysis/Gecko01-Tasmin-Gecko-2020-04-16/analysis-results")
filenames <- (Sys.glob("*resnet50_gecko*.csv"))
stride_name=NA
phase=c(5,6) #which columns to call for each phase
df_out<-data.frame(name=NA,speed=NA,stepphase=NA,direction=NA,foot=NA,body_angle=NA,
step_length_FL=NA,step_length_FR=NA,step_length_HR=NA,step_length_HL=NA,
midwrist_FL=NA,midwrist_FR=NA,midwrist_HR=NA,midwrist_HL=NA,
limbROM_FL=NA,limbROM_FR=NA,limbROM_HR=NA,limbROM_HL=NA,
spineROM_FL=NA, spineROM_FR=NA, spineROM_HR=NA, spineROM_HL=NA,
CROM_FL=NA, CROM_FR=NA, CROM_HR=NA, CROM_HL=NA)
for (ii in 1:length(filenames)){
#ii=1
dat<-read.csv(filenames[ii])
for (ll in 1:2){
#ll = 1 - 1 = FR, 2 = FL
#get the number of strides for the footphase
for (jj in 1:nrow(dat)){
stride_name[jj]=str_split(tail(str_split(dat[,phase[ll]],"'")[[jj]],n=2)[1],'00')[[1]][2]
}
if (phase[ll]=="5") {
foot_phase='FR'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=NA,
step_length_FR=mean(dat_temp$step.length_FR, na.rm=T),
step_length_HR=NA,
step_length_HL=mean(dat_temp$step.length_HL, na.rm=T),
midwrist_FL=NA,
midwrist_FR=mean(dat_temp$mid_stance_wrist_angles_mean_FR, na.rm=T),
midwrist_HR=NA,
midwrist_HL=mean(dat_temp$mid_stance_wrist_angles_mean_HL, na.rm=T),
limbROM_FL=NA,
limbROM_FR=mean(dat_temp$limbROM_FR, na.rm=T),
limbROM_HR=NA,
limbROM_HL=mean(dat_temp$limbROM_HL, na.rm=T),
spineROM_FL=NA,
spineROM_FR=mean(dat_temp$spineROM_FR, na.rm=T),
spineROM_HR=NA,
spineROM_HL=mean(dat_temp$spineROM_HL, na.rm=T),
CROM_FL=NA,
CROM_FR=mean(dat_temp$CROM_FR, na.rm=T),
CROM_HR=NA,
CROM_HL=mean(dat_temp$CROM_HL, na.rm=T))
df_out<-rbind(df_out,df_temp)
}# ends nn loop
}else
{
foot_phase='FL'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=mean(dat_temp$step.length_FL, na.rm=T),
step_length_FR=NA,
step_length_HR=mean(dat_temp$step.length_HR, na.rm=T),
step_length_HL=NA,
midwrist_FL=mean(dat_temp$mid_stance_wrist_angles_mean_FL, na.rm=T),
midwrist_FR=NA,
midwrist_HR=mean(dat_temp$mid_stance_wrist_angles_mean_HR, na.rm=T),
midwrist_HL=NA,
limbROM_FL=mean(dat_temp$limbROM_FL, na.rm=T),
limbROM_FR=NA,
limbROM_HR=mean(dat_temp$limbROM_HR, na.rm=T),
limbROM_HL=NA,
spineROM_FL=mean(dat_temp$spineROM_FL, na.rm=T),
spineROM_FR=NA,
spineROM_HR=mean(dat_temp$spineROM_HR, na.rm=T),
spineROM_HL=NA,
CROM_FL=mean(dat_temp$CROM_FL, na.rm=T),
CROM_FR=NA,
CROM_HR=mean(dat_temp$CROM_HR, na.rm=T),
CROM_HL=NA)
df_out<-rbind(df_out,df_temp)
} # end nn lopp
} #end else condition
}#end ll loop
}
write.csv(df_out, 'gecko_data_out-8-04-20.csv')
#filter df_out for direction == UP, needed for outlier removal
library(data.table)
df_out_UP <- df_out[grep("UP", df_out$direction), ]
head(df_out_UP)
#Plot boxplots with outliers:
boxplot(limbROM_FL~direction, df_out)
library(tidyverse)
# decide if you want to do outlier removal for ROMs for feet
outlier_removal = TRUE
setwd("D:/Jojo/PhD/ClimbingRobot/ClimbingLizardDLCAnalysis/Gecko01-Tasmin-Gecko-2020-04-16/analysis-results")
filenames <- (Sys.glob("*resnet50_Gecko01*.csv"))
stride_name=NA
phase=c(5,6) #which columns to call for each phase
df_out<-data.frame(name=NA,speed=NA,stepphase=NA,direction=NA,foot=NA,body_angle=NA,
step_length_FL=NA,step_length_FR=NA,step_length_HR=NA,step_length_HL=NA,
midwrist_FL=NA,midwrist_FR=NA,midwrist_HR=NA,midwrist_HL=NA,
limbROM_FL=NA,limbROM_FR=NA,limbROM_HR=NA,limbROM_HL=NA,
spineROM_FL=NA, spineROM_FR=NA, spineROM_HR=NA, spineROM_HL=NA,
CROM_FL=NA, CROM_FR=NA, CROM_HR=NA, CROM_HL=NA)
for (ii in 1:length(filenames)){
#ii=1
dat<-read.csv(filenames[ii])
for (ll in 1:2){
#ll = 1 - 1 = FR, 2 = FL
#get the number of strides for the footphase
for (jj in 1:nrow(dat)){
stride_name[jj]=str_split(tail(str_split(dat[,phase[ll]],"'")[[jj]],n=2)[1],'00')[[1]][2]
}
if (phase[ll]=="5") {
foot_phase='FR'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=NA,
step_length_FR=mean(dat_temp$step.length_FR, na.rm=T),
step_length_HR=NA,
step_length_HL=mean(dat_temp$step.length_HL, na.rm=T),
midwrist_FL=NA,
midwrist_FR=mean(dat_temp$mid_stance_wrist_angles_mean_FR, na.rm=T),
midwrist_HR=NA,
midwrist_HL=mean(dat_temp$mid_stance_wrist_angles_mean_HL, na.rm=T),
limbROM_FL=NA,
limbROM_FR=mean(dat_temp$limbROM_FR, na.rm=T),
limbROM_HR=NA,
limbROM_HL=mean(dat_temp$limbROM_HL, na.rm=T),
spineROM_FL=NA,
spineROM_FR=mean(dat_temp$spineROM_FR, na.rm=T),
spineROM_HR=NA,
spineROM_HL=mean(dat_temp$spineROM_HL, na.rm=T),
CROM_FL=NA,
CROM_FR=mean(dat_temp$CROM_FR, na.rm=T),
CROM_HR=NA,
CROM_HL=mean(dat_temp$CROM_HL, na.rm=T))
df_out<-rbind(df_out,df_temp)
}# ends nn loop
}else
{
foot_phase='FL'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=mean(dat_temp$step.length_FL, na.rm=T),
step_length_FR=NA,
step_length_HR=mean(dat_temp$step.length_HR, na.rm=T),
step_length_HL=NA,
midwrist_FL=mean(dat_temp$mid_stance_wrist_angles_mean_FL, na.rm=T),
midwrist_FR=NA,
midwrist_HR=mean(dat_temp$mid_stance_wrist_angles_mean_HR, na.rm=T),
midwrist_HL=NA,
limbROM_FL=mean(dat_temp$limbROM_FL, na.rm=T),
limbROM_FR=NA,
limbROM_HR=mean(dat_temp$limbROM_HR, na.rm=T),
limbROM_HL=NA,
spineROM_FL=mean(dat_temp$spineROM_FL, na.rm=T),
spineROM_FR=NA,
spineROM_HR=mean(dat_temp$spineROM_HR, na.rm=T),
spineROM_HL=NA,
CROM_FL=mean(dat_temp$CROM_FL, na.rm=T),
CROM_FR=NA,
CROM_HR=mean(dat_temp$CROM_HR, na.rm=T),
CROM_HL=NA)
df_out<-rbind(df_out,df_temp)
} # end nn lopp
} #end else condition
}#end ll loop
}
write.csv(df_out, 'gecko_data_out-8-04-20.csv')
#filter df_out for direction == UP, needed for outlier removal
library(data.table)
df_out_UP <- df_out[grep("UP", df_out$direction), ]
head(df_out_UP)
#Plot boxplots with outliers:
boxplot(limbROM_FL~direction, df_out)
boxplot(limbROM_FR~direction, df_out)
plot(limbROM_FL~limbROM_HR, df_out)
boxplot(limbROM_HR~direction, df_out)
boxplot(limbROM_HL~direction, df_out)
filenames(1)
filenames[1]
str_split(filenames[1],'_')[1]
str_split(filenames[1],'_')[[1]]
str_split(filenames[1],'_')[[1]][1]
stride_name=NA
phase=c(5,6) #which columns to call for each phase
df_out<-data.frame(name=NA,species=NA,speed=NA,stepphase=NA,direction=NA,foot=NA,body_angle=NA,
step_length_FL=NA,step_length_FR=NA,step_length_HR=NA,step_length_HL=NA,
midwrist_FL=NA,midwrist_FR=NA,midwrist_HR=NA,midwrist_HL=NA,
limbROM_FL=NA,limbROM_FR=NA,limbROM_HR=NA,limbROM_HL=NA,
spineROM_FL=NA, spineROM_FR=NA, spineROM_HR=NA, spineROM_HL=NA,
CROM_FL=NA, CROM_FR=NA, CROM_HR=NA, CROM_HL=NA)
for (ii in 1:length(filenames)){
#ii=1
dat<-read.csv(filenames[ii])
for (ll in 1:2){
#ll = 1 - 1 = FR, 2 = FL
#get the number of strides for the footphase
for (jj in 1:nrow(dat)){
stride_name[jj]=str_split(tail(str_split(dat[,phase[ll]],"'")[[jj]],n=2)[1],'00')[[1]][2]
}
if (phase[ll]=="5") {
foot_phase='FR'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
species=str_split(filenames[1],'_')[[1]][1],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=NA,
step_length_FR=mean(dat_temp$step.length_FR, na.rm=T),
step_length_HR=NA,
step_length_HL=mean(dat_temp$step.length_HL, na.rm=T),
midwrist_FL=NA,
midwrist_FR=mean(dat_temp$mid_stance_wrist_angles_mean_FR, na.rm=T),
midwrist_HR=NA,
midwrist_HL=mean(dat_temp$mid_stance_wrist_angles_mean_HL, na.rm=T),
limbROM_FL=NA,
limbROM_FR=mean(dat_temp$limbROM_FR, na.rm=T),
limbROM_HR=NA,
limbROM_HL=mean(dat_temp$limbROM_HL, na.rm=T),
spineROM_FL=NA,
spineROM_FR=mean(dat_temp$spineROM_FR, na.rm=T),
spineROM_HR=NA,
spineROM_HL=mean(dat_temp$spineROM_HL, na.rm=T),
CROM_FL=NA,
CROM_FR=mean(dat_temp$CROM_FR, na.rm=T),
CROM_HR=NA,
CROM_HL=mean(dat_temp$CROM_HL, na.rm=T))
df_out<-rbind(df_out,df_temp)
}# ends nn loop
}else
{
foot_phase='FL'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
species=str_split(filenames[1],'_')[[1]][1],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=mean(dat_temp$step.length_FL, na.rm=T),
step_length_FR=NA,
step_length_HR=mean(dat_temp$step.length_HR, na.rm=T),
step_length_HL=NA,
midwrist_FL=mean(dat_temp$mid_stance_wrist_angles_mean_FL, na.rm=T),
midwrist_FR=NA,
midwrist_HR=mean(dat_temp$mid_stance_wrist_angles_mean_HR, na.rm=T),
midwrist_HL=NA,
limbROM_FL=mean(dat_temp$limbROM_FL, na.rm=T),
limbROM_FR=NA,
limbROM_HR=mean(dat_temp$limbROM_HR, na.rm=T),
limbROM_HL=NA,
spineROM_FL=mean(dat_temp$spineROM_FL, na.rm=T),
spineROM_FR=NA,
spineROM_HR=mean(dat_temp$spineROM_HR, na.rm=T),
spineROM_HL=NA,
CROM_FL=mean(dat_temp$CROM_FL, na.rm=T),
CROM_FR=NA,
CROM_HR=mean(dat_temp$CROM_HR, na.rm=T),
CROM_HL=NA)
df_out<-rbind(df_out,df_temp)
} # end nn lopp
} #end else condition
}#end ll loop
}
write.csv(df_out, 'gecko01_data_out-17-04-20.csv')
stride_name=NA
phase=c(5,6) #which columns to call for each phase
df_out<-data.frame(name=NA,species=NA,speed=NA,stepphase=NA,direction=NA,foot=NA,body_angle=NA,
step_length_FL=NA,step_length_FR=NA,step_length_HR=NA,step_length_HL=NA,
midwrist_FL=NA,midwrist_FR=NA,midwrist_HR=NA,midwrist_HL=NA,
limbROM_FL=NA,limbROM_FR=NA,limbROM_HR=NA,limbROM_HL=NA,
spineROM_FL=NA, spineROM_FR=NA, spineROM_HR=NA, spineROM_HL=NA,
CROM_FL=NA, CROM_FR=NA, CROM_HR=NA, CROM_HL=NA)
for (ii in 1:length(filenames)){
#ii=1
dat<-read.csv(filenames[ii])
for (ll in 1:2){
#ll = 1 - 1 = FR, 2 = FL
#get the number of strides for the footphase
for (jj in 1:nrow(dat)){
stride_name[jj]=str_split(tail(str_split(dat[,phase[ll]],"'")[[jj]],n=2)[1],'00')[[1]][2]
}
if (phase[ll]=="5") {
foot_phase='FR'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
species=str_split(filenames[ii],'_')[[1]][1],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=NA,
step_length_FR=mean(dat_temp$step.length_FR, na.rm=T),
step_length_HR=NA,
step_length_HL=mean(dat_temp$step.length_HL, na.rm=T),
midwrist_FL=NA,
midwrist_FR=mean(dat_temp$mid_stance_wrist_angles_mean_FR, na.rm=T),
midwrist_HR=NA,
midwrist_HL=mean(dat_temp$mid_stance_wrist_angles_mean_HL, na.rm=T),
limbROM_FL=NA,
limbROM_FR=mean(dat_temp$limbROM_FR, na.rm=T),
limbROM_HR=NA,
limbROM_HL=mean(dat_temp$limbROM_HL, na.rm=T),
spineROM_FL=NA,
spineROM_FR=mean(dat_temp$spineROM_FR, na.rm=T),
spineROM_HR=NA,
spineROM_HL=mean(dat_temp$spineROM_HL, na.rm=T),
CROM_FL=NA,
CROM_FR=mean(dat_temp$CROM_FR, na.rm=T),
CROM_HR=NA,
CROM_HL=mean(dat_temp$CROM_HL, na.rm=T))
df_out<-rbind(df_out,df_temp)
}# ends nn loop
}else
{
foot_phase='FL'
#nn=2 - for debugging
for (nn in 1:length(unique(stride_name))){
dat_temp=dat[which(stride_name==unique(stride_name)[nn]),]
df_temp<-data.frame(name=filenames[ii],
species=str_split(filenames[ii],'_')[[1]][1],
speed=mean(dat_temp$speed_PXperS, na.rm=T),
stepphase=nn,
direction=tail(str_split(dat_temp$direction_of_climbing[1],"'"),n=1)[[1]][2],
foot=foot_phase,
body_angle=mean(dat_temp$body_deflection_angle, na.rm=T),
step_length_FL=mean(dat_temp$step.length_FL, na.rm=T),
step_length_FR=NA,
step_length_HR=mean(dat_temp$step.length_HR, na.rm=T),
step_length_HL=NA,
midwrist_FL=mean(dat_temp$mid_stance_wrist_angles_mean_FL, na.rm=T),
midwrist_FR=NA,
midwrist_HR=mean(dat_temp$mid_stance_wrist_angles_mean_HR, na.rm=T),
midwrist_HL=NA,
limbROM_FL=mean(dat_temp$limbROM_FL, na.rm=T),
limbROM_FR=NA,
limbROM_HR=mean(dat_temp$limbROM_HR, na.rm=T),
limbROM_HL=NA,
spineROM_FL=mean(dat_temp$spineROM_FL, na.rm=T),
spineROM_FR=NA,
spineROM_HR=mean(dat_temp$spineROM_HR, na.rm=T),
spineROM_HL=NA,
CROM_FL=mean(dat_temp$CROM_FL, na.rm=T),
CROM_FR=NA,
CROM_HR=mean(dat_temp$CROM_HR, na.rm=T),
CROM_HL=NA)
df_out<-rbind(df_out,df_temp)
} # end nn lopp
} #end else condition
}#end ll loop
}
write.csv(df_out, 'gecko01_data_out-17-04-20.csv')
plot(midwrist_FL~midwrist_HR, df_out)
plot(midwrist_FL~midwrist_HR, df_out, col=df_out$species, pch=20)
plot(midwrist_FL~midwrist_HR, df_out, col=as.numeric(df_out$species), pch=20)
plot(midwrist_FL~midwrist_HR, df_out, col=as.factor(df_out$species), pch=20)
plot(midwrist_FL~midwrist_HR, df_out, col=as.factor(df_out$species), pch=as.factor(df_out$direction))
as.factor(df_out$direction)
as.numeric(df_out$direction)
plot(midwrist_FL~midwrist_HR, df_out, col=as.factor(df_out$species), pch=as.numeric(as.factor(df_out$direction)))
levels(df_out$direction)
level(df_out$direction)
levels(as.factor(df_out$direction))
plot(midwrist_FL~midwrist_HR, df_out, col=as.factor(df_out$species), pch=as.numeric(as.factor(df_out$direction)), ylim=c(-5,50))
boxplot(body_angle~direction, df_out)
